Terminals:
( ) none , and or not true false + - * / % = < > ! is in " ' [ ] { } for : # if elif else while break
Variables:
SS NL ALPHABET DIGIT OTHER SYNTAX BODY SERU HASHTAG PERSEN NBO NBC MUL PLUS MIN COMA POW DIVIDE DIV COLON SEMICOLON LESS EQUAL GREAT SBO SBC UNDERSCORE CBO CBC PETIK1 PETIK2 ALPHANUM STRING_QORD VAR_FIRST VAR LET VALUE NUMBER VV BOOLEAN OP EXPRESSION RELATION STRING ARRAY RANGE DICT_CONTENT DICT COMMENT IF_HEADER ELIF_HEADER ELIF ELSE WHILE WHILE_HEADER FOR_HEADER FOR FOR_VAR ITERABLE ITERATE CONTINUE BREAK PASS DEF_HEADER DEF_S DEF RETURN FUNC_BODY IF_FUNC ELIF_FUNC ELSE_FUNC WHILE_FUNC FOR_FUNC WITH_FUNC ITERATE_FUNC BREAK_FUNC CONTINUE_FUNC CLASS CLASS_HEADER CLASS_S IMP_S IMPORT WITH WITH_HEADER FUNCTION NONES ANDS ORS ISS INS TRUES FALSES NOTS FORS IFS ELIFS ELSES WHILES BREAKS CONTINUES DEFS RETURNS RANGES CLASSS FROMS IMPORTS ASS WITHS CASE CASE_HEADER CASE_EX CASES SWITCH SWITCH_CONTENT SWITCH_HEADER SWITCHS DEFAULT DEFAULT_HEADER DEFAULTS DELETE FINALLY NULL THROW TRY
Production:
SS -> SS SEMICOLON NL SS SEMICOLON NL | NL SS SEMICOLON NL | SS SEMICOLON NL | IF | WHILE | SWITCH | FOR | CLASS | DEF | IMPORT | COMMENT | BREAK | FUNCTION | CONTINUE | WITH | PASS | VAR EQUAL VV | VAR OP EQUAL VV | NONES | VV;
ALPHABET -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z;
DIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
NONZERO -> 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
OTHER -> $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | MUL | PLUS | MIN | COMMA | DIVIDE | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
SYNTAX -> NONES | ANDS | ORS | ISS | INS | TRUES | FALSES | NOTS | FORS | IFS | ELIFS | ELSES | WHILES | BREAKS | CONTINUES | FUNCTIONS | RETURNS | RANGES | CLASSS | FROMS | IMPORTS | ASS | WITHS;
NL -> NL NL | newline;
NUMBER -> NUMBER NUMBER | DIGIT;
STRING_WORD -> STRING_WORD STRING_WORD | ALPHABET | DIGIT | OTHER | SYNTAX;
STRING -> STRING STRING | PETIK2 STRING_WORD PETIK2 | PETIK1 STRING_WORD PETIK1;
VAR_FIRST -> ALPHABET | UNDERSCORE;
VAR_VARIABLE -> VAR_FIRST ALPHANUM | VAR_FIRST;

% Comment
COMMENT -> MULTILINECOMMENT | SINGLELINECOMMENT;
MULTILINECOMMENT -> DIVIDE MUL MULTILINECOMMENTCHARS MUL DIVIDE | DIVIDE MUL MUL DIVIDE;
MULTILINECOMMENTCHARS -> MULTILINENOTASTERISKCHAR MULTILINECOMMENTCHARS | MULTILINENOTASTERISKCHAR | MUL POSTASTERISKCOMMENTCHARS | MUL;
POSTASTERISKCOMMENTCHARS -> MULTILINENOTFORWARDSLASHORASTERISKCHAR MULTILINECOMMENTCHARS | MULTILINENOTFORWARDSLASHORASTERISKCHAR | MUL POSTASTERISKCOMMENTCHARS | MUL;
MULTILINENOTASTERISKCHAR -> ALPHABET | DIGIT | $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | DIVIDE | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
MULTILINENOTFORWARDSLASHORASTERISKCHAR -> ALPHABET | DIGIT | $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
SINGLELINECOMMENT -> DIV SINGLELINECOMMENTCHARS;
SINGLELINECOMMENTCHARS -> SINGLELINECOMMENTCHAR | SINGLELINECOMMENTCHAR SINGLELINECOMMENTCHARS;
SINGLELINECOMMENTCHAR -> ALPHABET | DIGIT | OTHER;

% Numeric Literals
NUMERICLITERAL -> DECIMALLITERAL | BINARYINTEGERLITERAL | OCTALINTEGERLITERAL | HEXINTEGERLITERAL;
DECIMALLITERAL -> DECIMALINTEGERLITERAL DOTS | DECIMALINTEGERLITERAL DOTS DECIMALDIGITS | DECIMALINTEGERLITERAL DOTS EXPONENTPART | DECIMALINTEGERLITERAL DOTS DECIMALDIGITS EXPONENTPART | DOTS DECIMALDIGITS | DOTS DECIMALDIGITS EXPONENTPART | DECIMALINTEGERLITERAL EXPONENTPART | DECIMALINTEGERLITERAL;
DECIMALINTEGERLITERAL -> ZERO | NONZERO DECIMALDIGITS | NONZERO;
DECIMALDIGITS -> DECIMALDIGITS DIGIT | DIGIT;
EXPONENTPART -> EXPONENTINDICATOR SIGNEDINTEGER;
EXPONENTINDICATOR -> E | e;
SIGNEDINTEGER -> SIGN DECIMALDIGITS | DECIMALDIGITS;
SIGN -> PLUS | MIN;
PREBINARYDIGITS -> 0b | 0B;
BINARYINTEGERLITERAL -> PREBINARYDIGITS BINARYDIGITS;
BINARYDIGITS -> BINARYDIGITS BINARYDIGIT | BINARYDIGIT;
BINARYDIGIT -> 0 | 1;
PREOCTALDIGITS -> 0o | 0O;
OCTALINTEGERLITERAL -> PREOCTALDIGITS OCTALDIGITS;
OCTALDIGITS -> OCTALDIGITS OCTALDIGIT | OCTALDIGIT;
OCTALDIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
PREHEXDIGITS -> 0x | 0X;
HEXINTEGERLITERAL -> PREHEXDIGITS HEXDIGITS;
HEXDIGITS -> HEXDIGITS HEXDIGIT | HEXDIGIT;
HEXDIGIT -> DIGIT | A | B | C | D | E | F | a | b | c | d | e | f; 

% Identifier
IDENTIFIER -> IDENTIFIERSTART | IDENTIFIER IDENTIFIERPARTWITHOUTRESERVED;
IDENTIFIERNAME -> IDENTIFIERSTART | IDENTIFIERNAME IDENTIFIERPART;
IDENTIFIERSTART -> DOLLAR | UNDERSCORE | DIVBACK;
IDENTIFIERPART -> IDENTIFIERSTART | DIGIT | ALPHABET | RESERVEDWORD;
IDENTIFIERPARTWITHOUTRESERVED -> IDENTIFIERSTART | DIGIT | ALPHABET;

% Reserved Words
RESERVEDWORD -> KEYWORD | NULLLITERAL | BOOLEANLITERAL;
KEYWORD -> BREAKS | DOS | INS | TYPEOFS | CLASSS | ELSES | INSTANCEOFS | VAR | CATCHS | EXPORTS | NEWS | VOIDS | EXTENDSS | RETURNS | WHILES | CONSTS | FINALLYS | SUPERS | WITHS | CONTINUES | FORS | SWITCHS | YIELDS | FUNCTIONS | THIS | DEFAULTS | IFS | THROWS | DELETES | IMPORTS | TRYS;
NULLLITERAL -> NULLS;
BOOLEANLITERAL -> TRUES | FALSES;

% Primary Expression
ASSIGNMENTEXPRESSION -> CONDITIONALEXPRESSION | LEFTSIDEEXPRESSION = ASSIGNMENTEXPRESSION | LEFTSIDEEXPRESSION COMPOUNDASSIGNMENT ASSIGNMENTEXPRESSION;
PRIMARYEXPRESSION -> SIMPLEEXPRESSION | FUNCTIONEXPRESSION | OBJECTLITERAL;
PRIMARYEXPRESSION -> SIMPLEEXPRESSION;
SIMPLEEXPRESSION -> THIS | NULL | TRUES | FALSES | NUMBER | STRING | VAR_VARIABLE | PARENTHESIZEDEXPRESSION | ARRAYLITERAL;
PARENTHESIZEDEXPRESSION -> NBO EXPRESSION NBC;

% Function Expression
FUNCTIONEXPRESSION -> ANONYMOUSFUNCTION | NAMEDFUNCTION;

% Object Literal
OBJECTLITERAL -> CBO CBC | CBO FIELDLIST CBC;
FIELDLIST -> LITERALFIELD | FIELDLIST COMMA LITERALFIELD;
LITERALFIELD -> VAR_VARIABLE COLON ASSIGNMENTEXPRESSION;

% Array Literal
ARRAYLITERAL -> SBO SBC | SBO ELEMENTLIST SBC;
ELEMENTLIST -> LITERALELEMENT | ELEMENTLIST COMMA LITERALELEMENT;
LITERALELEMENT -> ASSIGNMENTEXPRESSION;

% Left Side Expressions
LEFTSIDEEXPRESSION -> CALLEXPRESSION | SHORTNEWEXPRESSION;
CALLEXPRESSION -> PRIMARYEXPRESSION | FULLNEWEXPRESSION | CALLEXPRESSION MEMBEROPERATOR | CALLEXPRESSION ARGUMENTS
FULLNEWEXPRESSION -> new FULLNEWSUBEXPRESSION ARGUMENTS;
SHORTNEWEXPRESSION -> new SHORTNEWEXPRESSION;
FULLNEWSUBEXPRESSION -> PRIMARYEXPRESSION | FULLNEWEXPRESSION | FULLNEWSUBEXPRESSION MEMBEROPERATOR;
SHORTNEWSUBEXPRESSION -> FULLNEWSUBEXPRESSION | SHORTNEWSEXPRESSION;
MEMBEROPERATOR -> SBO EXPRESSION SBC | DOT VAR_VARIABLE;
ARGUMENTS -> NBO NBC | NBO ARGUMENTLIST NBC;
ARGUMENTLIST -> ASSIGNMENTEXPRESSION | ARGUMENTLIST COMMA ASSIGNMENTEXPRESSION;

% Postfix Operator
POSTFIXEXPRESSION -> LEFTSIDEEXPRESSION | LEFTSIDEEXPRESSION INCR | LEFTSIDEEXPRESSION DECR;

% Unary Operators
UNARYEXPRESSION -> POSTFIXEXPRESSION | DELETE LEFTSIDEEXPRESSION | VOID UNARYEXPRESSION | TYPEOF UNARYEXPRESSION | INCR LEFTSIDEEXPRESSION | DECR LEFTSIDEEXPRESSION | PLUS UNARYEXPRESSION | MIN UNARYEXPRESSION | WAVE UNARYEXPRESSION | SERU UNARYEXPRESSION;

% Multiplicative Expression
MULTIPLICATIVEEXPRESSION -> UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION MUL UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION DIVIDE UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION PERSEN UNARYEXPRESSION;

% Additive Operator
ADDITIVEEXPRESSION -> MULTIPLICATIVEEXPRESSION | ADDITIVEEXPRESSION PLUS MULTIPLICATIVEEXPRESSION | ADDITIVEEXPRESSION MIN MULTIPLICATIVEEXPRESSION;

% Shift Operator
SHIFTEXPRESSION -> ADDITIVEEXPRESSION | SHIFTEXPRESSION LESS LESS ADDITIVEEXPRESSION | SHIFTEXPRESSION GREAT GREAT ADDITIVEEXPRESSION | SHIFTEXPRESSION GREAT GREAT GREAT ADDITIVEEXPRESSION;

% Relational Operator
RELATIONALEXPRESSION -> SHIFTEXPRESSION | RELATIONALEXPRESSION LESS SHIFTEXPRESSION | RELATIONALEXPRESSION GREAT SHIFTEXPRESSION | RELATIONALEXPRESSION LESS EQUAL SHIFTEXPRESSION | RELATIONALEXPRESSION GREAT EQUAL SHIFTEXPRESSION | RELATIONALEXPRESSION INSTANCEOF RELATIONALEXPRESSION | RELATIONALEXPRESSION INS RELATIONALEXPRESSION;

% Equality Operator
EQUALITYEXPRESSION -> RELATIONALEXPRESSION | EQUALITYEXPRESSION EQUAL EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION NOT EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION EQUAL EQUAL EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION NOT EQUAL EQUAL RELATIONALEXPRESSION;

% Bitwise Operator
BITWISEANDEXPRESSION -> EQUALITYEXPRESSION | BITWISEANDEXPRESSION ANDS EQUALITYEXPRESSION;
BITWISEXOREXPRESSION -> BITWISEANDEXPRESSION | BITWISEXOREXPRESSION XORS BITWISEANDEXPRESSION;
BITWISEOREXPRESSION -> BITWISEXOREXPRESSION | BITWISEANDEXPRESSION ORS BITWISEXOREXPRESSION;

% Binary Logical Operator
LOGICALANDEXPRESSION -> BITWISEOREXPRESSION | LOGICALANDEXPRESSION ANDS ANDS BITWISEOREXPRESSION;
LOGICALOREXPRESSION -> LOGICALANDEXPRESSION | LOGICALOREXPRESSION ORS ORS LOGICALANDEXPRESSION;

% Conditional Operator
CONDITIONALEXPRESSION -> LOGICALOREXPRESSION | LOGICALOREXPRESSION QUEST ASSIGNMENTEXPRESSION COLON;

% Assignment Operator
ASSIGNMENTEXPRESSION -> CONDITIONALEXPRESSION | LEFTSIDEEXPRESSION EQUAL ASSIGNMENTEXPRESSION | LEFTSIDEEXPRESSION COMPOUNDASSIGNMENT ASSIGNMENTEXPRESSION;
COMPOUNDASSIGNMENT -> MUL EQUAL | DIVIDE EQUAL | PERSEN EQUAL | PLUS EQUAL | MIN EQUAL | LESS LESS EQUAL | GREAT GREAT EQUAL | GREAT GREAT GREAT EQUAL | ANDS EQUAL | XORS EQUAL | ORS EQUAL;

% Expressions
EXPRESSION -> ASSIGNMENTEXPRESSION | EXPRESSION COMMA ASSIGNMENTEXPRESSION;
OPTIONALEXPRESSION -> EXPRESSION | ;

% Statement
STATEMENT -> BLOCKSTATEMENTS | VARIABLESTATEMENT OPTIONALSEMICOLON | EMPTYSTATEMENT | EXPRESSIONSTATEMENT OPTIONALSEMICOLON | IFSTATEMENT | BREAKABLESTATEMENT | CONTINUESTATEMENT OPTIONALSEMICOLON | BREAKSTATEMENT OPTIONALSEMICOLON | RETURNSTATEMENT OPTIONALSEMICOLON | WITHSTATEMENT | LABELEDSTATEMENT | THROWSTATEMENT OPTIONALSEMICOLON | TRYSTATEMENT | SWITCHSTATEMENT | DOSTATEMENT OPTIONALSEMICOLON | WHILESTATEMENT | FORSTATEMENT;
OPTIONALSEMICOLON -> SEMICOLON | ;

% Breakable Statement
BREAKABLESTATEMENT -> ITERATIONSTATEMENT | SWITCHSTATEMENT;
ITERATIONSTATEMENT -> DOS  STATEMENT WHILES NBO EXPRESSION NBC SEMICOLON | WHILES NBO EXPRESSION NBC STATEMENT | FORSTATEMENTA | FORSTATEMENTVAR | FORSTATEMENTLEX | FORSTATEMENTIN | FORSTATEMENTVARIN | FORSTATEMENTFOR | FORSTATEMENTOF | FORSTATEMENTVAR | FORSTATEMENTFVAROF | FORSTATEMENTDEC; 
SWITCHSTATEMENT -> SWITCH PARENTHESIZEDEXPRESSION CASEBLOCK;

% Iteration Statement
FORSTATEMENTA -> FORS NBO EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT;
FORSTATEMENTVAR -> FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT; 
FORSTATEMENTLEX -> FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT;
FORSTATEMENTIN -> FORS NBO LEFTSIDEEXPRESSION INS EXPRESSION NBC STATEMENT;
FORSTATEMENTVARIN -> FORS NBO VARS FORBINDING INS EXPRESSION NBC STATEMENT;
FORSTATEMENTFOR -> FORS NBO FORDECLARATION INS EXPRESSION NBC STATEMENT;
FORSTATEMENTOF -> FORS NBO LEFTSIDEEXPRESSION OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORSTATEMENTVAROF -> FORS NBO VARS FORBINDING OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORSTATEMENTDEC -> FORS NBO FORDECLARATION OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORDECLARATION -> LETORCONST FORBINDING;
FORBINDING -> BINDINGIDENTIFIER | BINDINGPATTERN;

% Switch Statement
CASEBLOCK -> CBO CBC | CBO CASECLAUSES CBC | CBO DEFAULTCLAUSE CBC | CBO CASECLAUSES DEFAULTCLAUSE CBC | CBO DEFAULTCLAUSE CASECLAUSES CBC | CBO CASECLAUSES DEFAULTCLAUSE CASECLAUSES CBC;
CASECLAUSES -> CASECLAUSE | CASECLAUSES CASECLAUSE;
CASECLAUSE -> CASES EXPRESSION COLON STATEMENTLIST | CASES EXPRESSION COLON;
DEFAULTCLAUSE -> DEFAULTS COLON STATEMENTLIST | DEFAULTS COLON;

% Empty Statement
EMPTYSTATEMENT -> SEMICOLON;

% Expression Statement
EXPRESSIONSTATEMENT -> EXPRESSION;

% Variable Definition
VARIABLESTATEMENT -> VARS VARIABLEDEFINITIONLIST;
VARIABLEDECLARATIONLIST -> VARIABLEDECLARATION | VARIABLEDECLARATIONLIST COMMA VARIABLEDECLARATION;
VARIABLEDECLARATION -> BINDINGIDENTIFIER | BINDINGIDENTIFIER INITIALIZER | BINDINGPATTERN INITIALIZER;

% Block
BLOCK -> CBO STATEMENTLIST CBC;

% Identifier
BINDINGIDENTIFIER -> IDENTIFIER | YIELDS;
BINDINGRESTELEMENT -> DOTS DOTS DOTS BINDINGIDENTIFIER;
LABELIDENTIFIER -> IDENTIFIER | YIELDS;

% formal parameter
FORMALPARAMETERS -> FORMALPARAMETERLIST | ;
FORMALPARAMETERLIST -> FUNCTIONRESTPARAMETER | FORMALSLIST | FORMALSLIST COMMA FUNCTIONRESTPARAMETER;
FORMALSLIST -> FORMALPARAMETER | FORMALSLIST COMMA FORMALPARAMETER;
FUNCTIONRESTPARAMETER -> BINDINGRESTELEMENT;
STRICTFORMALPARAMETERS -> FORMALPARAMETERS;

% Function Definition
FUNCTIONDECLARATION -> FUNCTIONS BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC FUNCTIONBODY;
FUNCTIONBODY -> FUNCTIONSTATEMENTLIST;
FUNCTIONSTATEMENTLIST -> STATEMENTLIST | ;
STATEMENTLIST -> STATEMENTLISTITEM | STATEMENTLIST STATEMENTLISTITEM;
STATEMENTLISTITEM -> STATEMENT | DECLARATION;

% Generator Definition
GENERATORDECLARATION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC SBO GENERATORBODY SBC;
GENERATOREXPRESSION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC SBO GENERATORBODY SBC;
GENERATORBODY -> FUNCTIONBODY;

% Class Declaration
CLASSDECLARATION -> CLASSS BINDINGIDENTIFIER CLASSTAIL;
CLASSEXPRESSION -> CLASSS BINDINGIDENTIFIER CLASSTAIL;
CLASSTAIL -> CLASSHERITAGE CBO CLASSBODY CBC | CBO CLASSBODY CBC;
CLASSHERITAGE -> EXTENDSS LEFTSIDEEXPRESSION;
CLASSBODY -> CLASSELEMENTLIST;
CLASSELEMENTLIST -> CLASSELEMENT | CLASSELEMENTLIST CLASSELEMENT;
CLASSELEMENT -> METHODDEFINITION | STATICS METHODDEFINITION | SEMICOLON;

% Method Definition
METHODDEFINITION -> PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO FUNCTIONBODY CBC | GENERATORMETHOD | GETS PROPERTYNAME NBO NBC CBO FUNCTIONBODY CBC | SETS PROPERTYNAME NBO PROPERTYSETPARAMETERLIST NBC CBO FUNCTIONBODY CBC;
PROPERTYSETPARAMETERLIST -> FORMALPARAMETER;
GENERATORMETHOD -> MUL PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO GENERATORBODY CBC;
GENERATORDECLARATION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC CBO GENERATORBODY CBC;
GENERATOREXPRESSION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC CBO GENERATORBODY CBC;
GENERATORBODY -> FUNCTIONBODY;

% Lexical Declaration
LEXICALDECLARATION -> LETORCONST BINDINGLIST SEMICOLON;
LETORCONST -> LETS | CONSTS;
BINDINGLIST -> LEXICALBINDING | BINDINGLIST COMMA LEXICALBINDING;
LEXICALBINDING -> BINDINGIDENTIFIER | BINDINGIDENTIFIER INITIALIZER | BINDINGPATTERN INITIALIZER;
INITIALIZER -> EQUAL ASSIGNMENTEXPRESSION;

% Binding Pattern
BINDINGPATTERN -> OBJECTBINDINGPATTERN | ARRAYBINDINGPATTERN;
OBJECTBINDINGPATTERN -> CBO BINDINGPROPERTYLIST CBC | CBO BINDINGPROPERTYLIST COMMA CBC | CBO BINDINGPROPERTYLIST COMMA CBC;
ELISION -> COMMA | ELISION COMMA;
ARRAYBINDINGPATTERN -> SBO SBC | SBO ELISION SBC | SBO BINDINGRESTELEMENT SBC | SBO ELLISION BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST SBC | SBO BINDINGELEMENTLIST COMMA SBC | SBO BINDINGELEMENTLIST COMMA BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST COMMA ELLISION BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST COMMA ELLISION SBC;
BINDINGPROPERTYLIST -> BINDINGPROPERTY | BINDINGPROPERTYLIST COMMA BINDINGPROPERTY;

% Declaration
DECLARATION -> HOISTABLEDECLARATION | CLASSDECLARATION | LEXICALDECLARATION;
HOISTABLEDECLARATION -> FUNCTIONDECLARATION | GENERATORDECLARATION;

% Labeled Statement
LABELEDSTATEMENT -> LABELIDENTIFIER COLON LABELLEDITEM;
LABELLEDITEM -> STATEMENT | FUNCTIONDECLARATION;

% If Statement
IFSTATEMENT -> IF PARENTHESIZEDEXPRESSION STATEMENT | IF PARENTHESIZEDEXPRESSION STATEMENT ELSE STATEMENT;

% Switch Statement
SWITCHSTATEMENT -> SWITCH PARENTHESIZEDEXPRESSION CBO CBC | SWITCH PARENTHESIZEDEXPRESSION CBO CASEGROUPS LASTCASEGROUP CBC;
CASEGROUPS -> | CASEGROUPS CASEGROUP;
CASEGROUP -> CASEGUARD BLOCKSTATEMENTSPREFIX;
LASTCASEGROUP -> CASEGUARD BLOCKSTATEMENTS;
CASEGUARDS -> CASEGUARD | CASEGUARDS CASEGUARD;
CASEGUARD -> CASE EXPRESSION COLON | DEFAULT COLON;

% Do-While Statement
DOSTATEMENT -> DO STATEMENT WHILE PARENTHESIZEDEXPRESSION;
WHILESTATEMENT -> WHILE PARENTHESIZEDEXPRESSION STATEMENT;

% For Statement
FORSTATEMENT -> FORS NBO FORINITIALIZER SEMICOLON OPTIONALEXPRESSION SEMICOLON OPTIONALEXPRESSION NBC STATEMENT | FORS NBO FORINBINDING INS EXPRESSION NBC STATEMENT;
FORINITIALIZER ->  | EXPRESSION | VAR VARIABLEDECLARATIONLIST;
FORINBINDING -> VAR VARIABLEDECLARATION | LEFTSIDEEXPRESSION;

% With Statement
WITHSTATEMENT -> WITHS PARENTHESIZEDEXPRESSION STATEMENT;

% Continue and Break Statements
CONTINUESTATEMENT -> CONTINUES SEMICOLON | CONTINUES LABELIDENTIFIER SEMICOLON;
LABELIDENTIFIER -> IDENTIFIER;

% Break Statement
BREAKSTATEMENT -> BREAKS SEMICOLON | BREAKS LABELIDENTIFIER SEMICOLON;

% Return Statement
RETURNSTATEMENT -> RETURNS SEMICOLON;
RETURNSTATEMENT -> RETURNS EXPRESSION SEMICOLON;

% Throw Statement
THROWSTATEMENT -> THROWS EXPRESSION SEMICOLON;

% Try Statement
TRYSTATEMENT -> TRYS BLOCK CATCH | TRYS BLOCK FINALLY | TRYS BLOCK CATCH FINALLY;
CATCH -> CATCHS NBO CATCHPARAMETER NBC BLOCK;
FINALLY -> FINALLYS BLOCK;
CATCHPARAMETER -> BINDINGIDENTIFIER | BINDINGPATTERN;

% Function Definition
FUNCTIONDEFINITION -> NAMEDFUNCTION;
ANONYMOUSFUNCTION -> DEFS FORMALPARAMETERSANDBODY;
NAMEDFUNCTION -> DEFS VAR_VARIABLE FORMALPARAMETERSANDBODY;
FORMALPARAMETERSANDBODY -> NBO FORMALPARAMETERS NBC CBO TOPSTATEMENTS CBC;
FORMALPARAMETERS ->  | FORMALPARAMETERSPREFIX;
FORMALPARAMETERSPREFIX -> FORMALPARAMETER | FORMALPARAMETERSPREFIX COMMA FORMALPARAMETER;
FORMALPARAMETER -> VAR_VARIABLE;

% Programs
PROGRAM -> TOPSTATEMENTS;
TOPSTATEMENTS ->  | TOPSTATEMENTSPREFIX;
TOPSTATEMENTSPREFIX -> TOPSTATEMENT | TOPSTATEMENTSPREFIX TOPSTATEMENT;
TOPSTATEMENT -> STATEMENT | FUNCTIONDEFINITION;

ZERO -> 0;
DOTS -> .;
XORS -> ^;
ANDS -> &;
ORS -> |;
NEWS -> new;
THISS -> this;
NULLS -> null;
INSTANCEOFS -> instanceof;
SERU -> !;
QUEST -> ?;
HASHTAG -> #;
DOLLAR -> $;
PERSEN -> %;
NBO -> (;
NBC -> );
WAVE -> ~;
MUL -> *;
POW -> * *;
PLUS -> +;
INCR -> + +;
MIN -> -;
DECR -> - -; 
COMMA -> ,;
DIVIDE -> /;
DIV -> / /;
DIVBACK -> \;
COLON -> :;
LESS -> <;
EQUAL -> =;
GREAT -> >;
SBO -> [;
SBC -> ];
UNDERSCORE -> _;
CBO -> {;
CBC -> };
PETIK1 -> ';
PETIK2 -> ";
NONES -> none;
DELETES -> delete;
SWITCHS -> switch;
CASES -> case;
VOIDS -> void;
TYPEOFS -> typeof;
ANDS -> and;
TRYS -> try
ORS -> or;
ISS -> is;
INS -> in;
NOTS -> not;
TRUES -> true;
FALSES -> false;
FORS -> for;
DOS -> do;
WHILES -> while;
IFS -> if;
ELIFS -> else if;
ELSES -> else;
BREAKS -> break;
CONTINUES -> continue;
FINALLYS -> finally;
CATCHS -> catch;
FUNCTIONS -> function;
RETURNS -> return;
CLASSS -> class;
FROMS -> from;
IMPORTS -> import;
SEMICOLON -> ;;
VAR -> var;
EXPORTS -> export;
EXTENDSS -> extends;
CONSTS -> const;
SUPERS -> super;
WITHS -> with;
YIELDS -> yield;
DEFAULTS -> default;
THROWS -> throw;
STATICS -> static;