Terminals:
( ) none , and or not true false + - * / % = < > ! is in " ' [ ] { } for : # if elif else while break
Variables:
SS NL ALPHABET DIGIT OTHER SYNTAX BODY SERU HASHTAG PERSEN NBO NBC MUL PLUS MIN COMA POW DIVIDE DIV COLON SEMICOLON LESS EQUAL GREAT SBO SBC UNDERSCORE CBO CBC PETIK1 PETIK2 ALPHANUM STRING_QORD VAR_FIRST VAR LET VALUE NUMBER VV BOOLEAN OP EXPRESSION RELATION STRING ARRAY RANGE DICT_CONTENT DICT COMMENT IF_HEADER ELIF_HEADER ELIF ELSE WHILE WHILE_HEADER FOR_HEADER FOR FOR_VAR ITERABLE ITERATE CONTINUE BREAK PASS DEF_HEADER DEF_S DEF RETURN FUNC_BODY IF_FUNC ELIF_FUNC ELSE_FUNC WHILE_FUNC FOR_FUNC WITH_FUNC ITERATE_FUNC BREAK_FUNC CONTINUE_FUNC CLASS CLASS_HEADER CLASS_S IMP_S IMPORT WITH WITH_HEADER FUNCTION NONES ANDS ORS ISS INS TRUES FALSES NOTS FORS IFS ELIFS ELSES WHILES BREAKS CONTINUES DEFS RETURNS RANGES CLASSS FROMS IMPORTS ASS WITHS CASE CASE_HEADER CASE_EX CASES SWITCH SWITCH_CONTENT SWITCH_HEADER SWITCHS DEFAULT DEFAULT_HEADER DEFAULTS DELETE FINALLY NULL THROW TRY
Production:
SS -> SS SEMICOLON NL SS SEMICOLON NL | NL SS SEMICOLON NL | SS SEMICOLON NL | IF | WHILE | SWITCH | FOR | CLASS | DEF | IMPORT | COMMENT | BREAK | FUNCTION | CONTINUE | WITH | PASS | VAR EQUAL VV | VAR OP EQUAL VV | NONES | VV;
ALPHABET -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z;
DIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
NONZERO -> 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
OTHER -> $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | MUL | PLUS | MIN | COMMA | DIVIDE | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
SYNTAX -> NONES | ANDS | ORS | ISS | INS | TRUES | FALSES | NOTS | FORS | IFS | ELIFS | ELSES | WHILES | BREAKS | CONTINUES | FUNCTIONS | RETURNS | RANGES | CLASSS | FROMS | IMPORTS | ASS | WITHS;
NL -> NL NL | newline;
NUMBER -> NUMBER NUMBER | DIGIT;
STRING_WORD -> STRING_WORD STRING_WORD | ALPHABET | DIGIT | OTHER | SYNTAX;
STRING -> STRING STRING | PETIK2 STRING_WORD PETIK2 | PETIK1 STRING_WORD PETIK1;
VAR_FIRST -> ALPHABET | UNDERSCORE;
VAR_VARIABLE -> VAR_FIRST ALPHANUM | VAR_FIRST;

COMMENT -> MULTILINECOMMENT | SINGLELINECOMMENT;
MULTILINECOMMENT -> DIVIDE MUL MULTILINECOMMENTCHARS MUL DIVIDE | DIVIDE MUL MUL DIVIDE;
MULTILINECOMMENTCHARS -> MULTILINENOTASTERISKCHAR MULTILINECOMMENTCHARS | MULTILINENOTASTERISKCHAR | MUL POSTASTERISKCOMMENTCHARS | MUL;
POSTASTERISKCOMMENTCHARS -> MULTILINENOTFORWARDSLASHORASTERISKCHAR MULTILINECOMMENTCHARS | MULTILINENOTFORWARDSLASHORASTERISKCHAR | MUL POSTASTERISKCOMMENTCHARS | MUL;
MULTILINENOTASTERISKCHAR -> ALPHABET | DIGIT | $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | DIVIDE | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
MULTILINENOTFORWARDSLASHORASTERISKCHAR -> ALPHABET | DIGIT | $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
SINGLELINECOMMENT -> DIV SINGLELINECOMMENTCHARS;
SINGLELINECOMMENTCHARS -> SINGLELINECOMMENTCHAR | SINGLELINECOMMENTCHAR SINGLELINECOMMENTCHARS;
SINGLELINECOMMENTCHAR -> ALPHABET | DIGIT | OTHER;

DECIMALLITERAL -> DECIMALINTEGERLITERAL DOTS | DECIMALINTEGERLITERAL DOTS DECIMALDIGITS | DECIMALINTEGERLITERAL DOTS EXPONENTPART | DECIMALINTEGERLITERAL DOTS DECIMALDIGITS EXPONENTPART | DOTS DECIMALDIGITS | DOTS DECIMALDIGITS EXPONENTPART | DECIMALINTEGERLITERAL EXPONENTPART | DECIMALINTEGERLITERAL;
DECIMALINTEGERLITERAL -> ZERO | NONZERO DECIMALDIGITS | NONZERO;
DECIMALDIGITS -> DECIMALDIGITS DIGIT | DIGIT;
EXPONENTPART -> EXPONENTINDICATOR SIGNEDINTEGER;
EXPONENTINDICATOR -> E | e;
SIGNEDINTEGER -> SIGN DECIMALDIGITS | DECIMALDIGITS;
SIGN -> PLUS | MIN;
PREBINARYDIGITS -> 0b | 0B;
BINARYINTEGERLITERAL -> PREBINARYDIGITS BINARYDIGITS;
BINARYDIGITS -> BINARYDIGITS BINARYDIGIT | BINARYDIGIT;
BINARYDIGIT -> 0 | 1;
PREOCTALDIGITS -> 0o | 0O;
OCTALINTEGERLITERAL -> PREOCTALDIGITS OCTALDIGITS;
OCTALDIGITS -> OCTALDIGITS OCTALDIGIT | OCTALDIGIT;
OCTALDIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
PREHEXDIGITS -> 0x | 0X;
HEXINTEGERLITERAL -> PREHEXDIGITS HEXDIGITS;
HEXDIGITS -> HEXDIGITS HEXDIGIT | HEXDIGIT;
HEXDIGIT -> DIGIT | A | B | C | D | E | F | a | b | c | d | e | f; 

% Reserved Words
RESERVEDWORD -> KEYWORD | NULLLITERAL | BOOLEANLITERAL;
KEYWORD -> BREAKS | DOS | INS | TYPEOFS | CLASSS | ELSES | INSTANCEOFS | VAR | CATCHS | EXPORTS | NEWS | VOIDS | EXTENDSS | RETURNS | WHILES | CONSTS | FINALLYS | SUPERS | WITHS | CONTINUES | FORS | SWITCHS | YIELDS | FUNCTIONS | THIS | DEFAULTS | IFS | THROWS | DELETES | IMPORTS | TRYS;
NULLLITERAL -> NULLS;
BOOLEANLITERAL -> TRUES | FALSES;

ASSIGNMENTEXPRESSION -> CONDITIONALEXPRESSION | LEFTSIDEEXPRESSION = ASSIGNMENTEXPRESSION | LEFTSIDEEXPRESSION COMPOUNDASSIGNMENT ASSIGNMENTEXPRESSION;
PRIMARYEXPRESSION -> THIS | LITERAL | IDENTIFIERREFERENCE | SIMPLEEXPRESSION | ARRAYLITERAL | OBJECTLITERAL | FUNCTIONEXPRESSION | CLASSEXPRESSION | GENERATOREXPRESSION | TEMPLATELITERAL | COVERPARENTHESIZEDEXPRESSIONANDARROWPARAMETERLIST;
PRIMARYEXPRESSION -> SIMPLEEXPRESSION;
SIMPLEEXPRESSION -> THIS | NULL | TRUES | FALSES | NUMBER | STRING | VAR_VARIABLE | PARENTHESIZEDEXPRESSION | ARRAYLITERAL;
PARENTHESIZEDEXPRESSION -> NBO EXPRESSION NBC;

% Literal
LITERAL -> NULLLITERAL | BOOLEANLITERAL | NUMERICLITERAL | STRINGLITERAL;

% Function Expression
FUNCTIONEXPRESSION -> ANONYMOUSFUNCTION | NAMEDFUNCTION;

% Object Literal
OBJECTLITERAL -> CBO CBC | CBO PROPERTYDEFINITIONLIST CBC;
PROPERTYDEFINITIONLIST -> PROPERTYDEFINITION | PROPERTYDEFINITIONLIST COMMA PROPERTYDEFINITION;
PROPERTYDEFINITION -> IDENTIFIERREFERENCE | COVERINITIALIZEDNAME | PROPERTYNAME COLON ASSIGNMENTEXPRESSION | METHODDEFINITION;
PROPERTYNAME -> LITERALPROPERTYNAME | COMPUTEDPROPERTYNAME;
LITERALPROPERTYNAME -> IDENTIFIERNAME | STRINGLITERAL | NUMERICLITERAL;
COMPUTEDPROPERTYNAME -> SBO ASSIGNMENTEXPRESSION SBC;
COVERINITIALIZEDNAME -> IDENTIFIERREFERENCE INITIALIZER;

% Template Literal
TEMPLATELITERAL -> NOSUBSTITUTIONTEMPLATE | TEMPLATEHEAD EXPRESSION TEMPLATESPANS;
TEMPLATESPANS -> TEMPLATETAIL | TEMPLATEMIDDLELIST TEMPLATETAIL;
TEMPLATEMIDDLELIST -> TEMPLATEMIDDLE EXPRESSION | TEMPLATEMIDDLELIST TEMPLATEMIDDLE EXPRESSION;
MEMBEREXPRESSION -> PRIMARYEXPRESSION | MEMBEREXPRESSION SBO EXPRESSION SBC | MEMBEREXPRESSION DOTS IDENTIFIERNAME | MEMBEREXPRESSION TEMPLATELITERAL | SUPERPROPERTY | METAPROPERTY | NEWS MEMBEREXPRESSION ARGUMENTS;
SUPERPROPERTY -> SUPERS SBO EXPRESSION SBC | SUPERS DOTS IDENTIFIERNAME;
METAPROPERTY -> NEWTARGET;
NEWTARGET -> NEWS DOTS TARGETS;
NEWEXPRESSION -> MEMBEREXPRESSION | NEWS NEWEXPRESSION;
CALLEXPRESSION -> MEMBEREXPRESSION ARGUMENTS | SUPERCALL | CALLEXPRESSION ARGUMENTS | CALLEXPRESSION SBO EXPRESSION SBC | CALLEXPRESSION DOTS IDENTIFIERNAME | CALLEXPRESSION TEMPLATELITERAL;
SUPERCALL -> SUPERS ARGUMENTS;
ARGUMENTS -> NBO ARGUMENTLIST NBC | NBO NBC;
ARGUMENTLIST -> ASSIGNMENTEXPRESSION | DOTS DOTS DOTS ASSIGNMENTEXPRESSION | ARGUMENTLIST COMMA ASSIGNMENTEXPRESSION | ARGUMENTLIST COMMA DOTS DOTS DOTS ASSIGNMENTEXPRESSION;

% Array Literal
ARRAYLITERAL -> SBO SBC | SBO ELISION SBC | SBO ELEMENTLIST SBC | SBO ELEMENTLIST COMMA SBC | SBO ELEMENTLIST COMMA ELISION SBC;
ELEMENTLIST -> ELISION ASSIGNMENTEXPRESSION | ASSIGNMENTEXPRESSION | ELISION | ELISION SPREADELEMENT | SPREADELEMENT | ELEMENTLIST COMMA ELISION ASSIGNMENTEXPRESSION | ELEMENTLIST COMMA ASSIGNMENTEXPRESSION | ELEMENTLIST COMMA ELISION SPREADELEMENT | ELEMENTLIST COMMA SPREADELEMENT;
LITERALELEMENT -> ASSIGNMENTEXPRESSION;
SPREADELEMENT -> DOTS DOTS DOTS ASSIGNMENTEXPRESSION;

LEFTSIDEEXPRESSION -> CALLEXPRESSION | SHORTNEWEXPRESSION;
CALLEXPRESSION -> PRIMARYEXPRESSION | FULLNEWEXPRESSION | CALLEXPRESSION MEMBEROPERATOR | CALLEXPRESSION ARGUMENTS
FULLNEWEXPRESSION -> new FULLNEWSUBEXPRESSION ARGUMENTS;
SHORTNEWEXPRESSION -> new SHORTNEWEXPRESSION;
FULLNEWSUBEXPRESSION -> PRIMARYEXPRESSION | FULLNEWEXPRESSION | FULLNEWSUBEXPRESSION MEMBEROPERATOR;
SHORTNEWSUBEXPRESSION -> FULLNEWSUBEXPRESSION | SHORTNEWSEXPRESSION;
MEMBEROPERATOR -> SBO EXPRESSION SBC | DOT VAR_VARIABLE;
ARGUMENTS -> NBO NBC | NBO ARGUMENTLIST NBC;
ARGUMENTLIST -> ASSIGNMENTEXPRESSION | ARGUMENTLIST COMMA ASSIGNMENTEXPRESSION;

POSTFIXEXPRESSION -> LEFTSIDEEXPRESSION | LEFTSIDEEXPRESSION INCR | LEFTSIDEEXPRESSION DECR;

UNARYEXPRESSION -> POSTFIXEXPRESSION | DELETE LEFTSIDEEXPRESSION | VOID UNARYEXPRESSION | TYPEOF UNARYEXPRESSION | INCR LEFTSIDEEXPRESSION | DECR LEFTSIDEEXPRESSION | PLUS UNARYEXPRESSION | MIN UNARYEXPRESSION | WAVE UNARYEXPRESSION | SERU UNARYEXPRESSION;

MULTIPLICATIVEEXPRESSION -> UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION MUL UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION DIVIDE UNARYEXPRESSION | MULTIPLICATIVEEXPRESSION PERSEN UNARYEXPRESSION;

ADDITIVEEXPRESSION -> MULTIPLICATIVEEXPRESSION | ADDITIVEEXPRESSION PLUS MULTIPLICATIVEEXPRESSION | ADDITIVEEXPRESSION MIN MULTIPLICATIVEEXPRESSION;

SHIFTEXPRESSION -> ADDITIVEEXPRESSION | SHIFTEXPRESSION LESS LESS ADDITIVEEXPRESSION | SHIFTEXPRESSION GREAT GREAT ADDITIVEEXPRESSION | SHIFTEXPRESSION GREAT GREAT GREAT ADDITIVEEXPRESSION;

% Relational Operator
RELATIONALEXPRESSION -> SHIFTEXPRESSION | RELATIONALEXPRESSION LESS SHIFTEXPRESSION | RELATIONALEXPRESSION GREAT SHIFTEXPRESSION | RELATIONALEXPRESSION LESS EQUAL SHIFTEXPRESSION | RELATIONALEXPRESSION GREAT EQUAL SHIFTEXPRESSION | RELATIONALEXPRESSION INSTANCEOFS RELATIONALEXPRESSION | RELATIONALEXPRESSION INS RELATIONALEXPRESSION;

% Equality Operator
EQUALITYEXPRESSION -> RELATIONALEXPRESSION | EQUALITYEXPRESSION EQUAL EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION SERU EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION EQUAL EQUAL EQUAL RELATIONALEXPRESSION | EQUALITYEXPRESSION SERU EQUAL EQUAL RELATIONALEXPRESSION;

BITWISEANDEXPRESSION -> EQUALITYEXPRESSION | BITWISEANDEXPRESSION ANDS EQUALITYEXPRESSION;
BITWISEXOREXPRESSION -> BITWISEANDEXPRESSION | BITWISEXOREXPRESSION XORS BITWISEANDEXPRESSION;
BITWISEOREXPRESSION -> BITWISEXOREXPRESSION | BITWISEOREXPRESSION ORS BITWISEXOREXPRESSION;

LOGICALANDEXPRESSION -> BITWISEOREXPRESSION | LOGICALANDEXPRESSION ANDS ANDS BITWISEOREXPRESSION;
LOGICALOREXPRESSION -> LOGICALANDEXPRESSION | LOGICALOREXPRESSION ORS ORS LOGICALANDEXPRESSION;

CONDITIONALEXPRESSION -> LOGICALOREXPRESSION | LOGICALOREXPRESSION QUEST ASSIGNMENTEXPRESSION COLON;

% Assignment Operator
ASSIGNMENTEXPRESSION -> CONDITIONALEXPRESSION | YIELDEXPRESSION | ARROWFUNCTION | LEFTSIDEEXPRESSION EQUAL ASSIGNMENTEXPRESSION | LEFTSIDEEXPRESSION ASSIGNMENTOPERATOR ASSIGNMENTEXPRESSION;
ASSIGNMENTOPERATOR -> MUL EQUAL | DIVIDE EQUAL | PERSEN EQUAL | PLUS EQUAL | MIN EQUAL | LESS LESS EQUAL | GREAT GREAT EQUAL | GREAT GREAT GREAT EQUAL | ANDS EQUAL | XORS EQUAL | ORS EQUALL;
EXPRESSION -> ASSIGNMENTEXPRESSION | EXPRESSION COMMA ASSIGNMENTEXPRESSION;

% Arrow Function
ARROWFUNCTION -> ARROWPARAMETERS EQUAL GREAT CONCISEBODY;
ARROWPARAMETERS -> BINDINGIDENTIFIER | COVERPARENTHESIZEDEXPRESSIONANDARROWPARAMETERLIST;
CONCISEBODY -> ASSIGNMENTEXPRESSION | CBO FUNCTIONBODY CBC;
METHODDEFINITION -> PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO FUNCTIONBODY CBC | GENERATORMETHOD | GETS PROPERTYNAME NBO NBC CBO FUNCTIONBODY CBC | SETS PROPERTYNAME NBO PROPERTYSETPARAMETERLIST NBC CBO FUNCTIONBODY CBC;
PROPERTYSETPARAMETERLIST -> FORMALPARAMETER;
GENERATORMETHOD -> MUL PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO GENERATORBODY CBC;
GENE

EXPRESSION -> ASSIGNMENTEXPRESSION | EXPRESSION COMMA ASSIGNMENTEXPRESSION;
OPTIONALEXPRESSION -> EXPRESSION;

STATEMENT -> BLOCKSTATEMENTS | VARIABLESTATEMENT OPTIONALSEMICOLON | EMPTYSTATEMENT | EXPRESSIONSTATEMENT OPTIONALSEMICOLON | IFSTATEMENT | BREAKABLESTATEMENT | CONTINUESTATEMENT OPTIONALSEMICOLON | BREAKSTATEMENT OPTIONALSEMICOLON | RETURNSTATEMENT OPTIONALSEMICOLON | WITHSTATEMENT | LABELEDSTATEMENT | THROWSTATEMENT OPTIONALSEMICOLON | TRYSTATEMENT | SWITCHSTATEMENT | DOSTATEMENT OPTIONALSEMICOLON | WHILESTATEMENT | FORSTATEMENT | VARIABLESTATEMENT | EXPRESSIONSTATEMENT | CONTINUESTATEMENT | BREAKSTATEMENT | RETURNSTATEMENT | THROWSTATEMENT | DOSTATEMENT;
OPTIONALSEMICOLON -> SEMICOLON;

BREAKABLESTATEMENT -> ITERATIONSTATEMENT | SWITCHSTATEMENT;
ITERATIONSTATEMENT -> DOS STATEMENT WHILES NBO EXPRESSION NBC SEMICOLON | WHILES NBO EXPRESSION NBC STATEMENT | FORSTATEMENTA | FORSTATEMENTVAR | FORSTATEMENTLEX | FORSTATEMENTIN | FORSTATEMENTVARIN | FORSTATEMENTFOR | FORSTATEMENTOF | FORSTATEMENTVAR | FORSTATEMENTFVAROF | FORSTATEMENTDEC; 
SWITCHSTATEMENT -> SWITCH PARENTHESIZEDEXPRESSION CASEBLOCK;

FORSTATEMENTA -> FORS NBO EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT;
FORSTATEMENTVAR -> FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO VARS VARIABLEDECLARATIONLIST EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT; 
FORSTATEMENTLEX -> FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION SEMICOLON EXPRESSION SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON SEMICOLON NBC STATEMENT |  FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON SEMICOLON EXPRESSION NBC STATEMENT | FORS NBO LEXICALDECLARATION EXPRESSION SEMICOLON EXPRESSION SEMICOLON NBC STATEMENT;
FORSTATEMENTIN -> FORS NBO LEFTSIDEEXPRESSION INS EXPRESSION NBC STATEMENT;
FORSTATEMENTVARIN -> FORS NBO VARS FORBINDING INS EXPRESSION NBC STATEMENT;
FORSTATEMENTFOR -> FORS NBO FORDECLARATION INS EXPRESSION NBC STATEMENT;
FORSTATEMENTOF -> FORS NBO LEFTSIDEEXPRESSION OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORSTATEMENTVAROF -> FORS NBO VARS FORBINDING OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORSTATEMENTDEC -> FORS NBO FORDECLARATION OFS ASSIGNMENTEXPRESSION NBC STATEMENT;
FORDECLARATION -> LETORCONST FORBINDING;
FORBINDING -> BINDINGIDENTIFIER | BINDINGPATTERN;

CASEBLOCK -> CBO CBC | CBO CASECLAUSES CBC | CBO DEFAULTCLAUSE CBC | CBO CASECLAUSES DEFAULTCLAUSE CBC | CBO DEFAULTCLAUSE CASECLAUSES CBC | CBO CASECLAUSES DEFAULTCLAUSE CASECLAUSES CBC;
CASECLAUSES -> CASECLAUSE | CASECLAUSES CASECLAUSE;
CASECLAUSE -> CASES EXPRESSION COLON STATEMENTLIST | CASES EXPRESSION COLON;
DEFAULTCLAUSE -> DEFAULTS COLON STATEMENTLIST | DEFAULTS COLON;

EMPTYSTATEMENT -> SEMICOLON;

EXPRESSIONSTATEMENT -> EXPRESSION;

VARIABLESTATEMENT -> VARS VARIABLEDEFINITIONLIST;
VARIABLEDECLARATIONLIST -> VARIABLEDECLARATION | VARIABLEDECLARATIONLIST COMMA VARIABLEDECLARATION;
VARIABLEDECLARATION -> BINDINGIDENTIFIER | BINDINGIDENTIFIER INITIALIZER | BINDINGPATTERN INITIALIZER;

BLOCK -> CBO STATEMENTLIST CBC;

% Identifier
IDENTIFIERREFERENCE -> IDENTIFIER;
BINDINGIDENTIFIER -> IDENTIFIER | YIELDS;
BINDINGRESTELEMENT -> DOTS DOTS DOTS BINDINGIDENTIFIER;
LABELIDENTIFIER -> IDENTIFIER | YIELDS;
IDENTIFIER -> IDENTIFIERSTART | IDENTIFIER IDENTIFIERPARTWITHOUTRESERVED;
IDENTIFIERNAME -> IDENTIFIERSTART | IDENTIFIERNAME IDENTIFIERPART;
IDENTIFIERSTART -> DOLLAR | UNDERSCORE | DIVBACK;
IDENTIFIERPART -> IDENTIFIERSTART | DIGIT | ALPHABET | RESERVEDWORD;
IDENTIFIERPARTWITHOUTRESERVED -> IDENTIFIERSTART | DIGIT | ALPHABET;

FORMALPARAMETERS -> FORMALPARAMETERLIST;
FORMALPARAMETERLIST -> FUNCTIONRESTPARAMETER | FORMALSLIST | FORMALSLIST COMMA FUNCTIONRESTPARAMETER;
FORMALSLIST -> FORMALPARAMETER | FORMALSLIST COMMA FORMALPARAMETER;
FUNCTIONRESTPARAMETER -> BINDINGRESTELEMENT;
STRICTFORMALPARAMETERS -> FORMALPARAMETERS;

FUNCTIONDECLARATION -> FUNCTIONS BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC FUNCTIONBODY | FUNCTIONS BINDINGIDENTIFIER NBO NBC FUNCTIONBODY;
FUNCTIONBODY -> FUNCTIONSTATEMENTLIST;
FUNCTIONSTATEMENTLIST -> STATEMENTLIST;
STATEMENTLIST -> STATEMENTLISTITEM | STATEMENTLIST STATEMENTLISTITEM;
STATEMENTLISTITEM -> STATEMENT | DECLARATION;

GENERATORDECLARATION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC SBO GENERATORBODY SBC | FUNCTIONS MUL BINDINGIDENTIFIER NBO NBC SBO GENERATORBODY SBC;
GENERATOREXPRESSION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC SBO GENERATORBODY SBC | FUNCTIONS MUL BINDINGIDENTIFIER NBO NBC SBO GENERATORBODY SBC;
GENERATORBODY -> FUNCTIONBODY;

% Class Declaration
CLASSDECLARATION -> CLASSS BINDINGIDENTIFIER CLASSTAIL | CLASSS CLASSTAIL;
CLASSEXPRESSION -> CLASSS BINDINGIDENTIFIER CLASSTAIL;
CLASSTAIL -> CLASSHERITAGE CBO CLASSBODY CBC | CBO CLASSBODY CBC;
CLASSHERITAGE -> EXTENDSS LEFTSIDEEXPRESSION;
CLASSBODY -> CLASSELEMENTLIST;
CLASSELEMENTLIST -> CLASSELEMENT | CLASSELEMENTLIST CLASSELEMENT;
CLASSELEMENT -> METHODDEFINITION | STATICS METHODDEFINITION | SEMICOLON;

METHODDEFINITION -> PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO FUNCTIONBODY CBC | GENERATORMETHOD | GETS PROPERTYNAME NBO NBC CBO FUNCTIONBODY CBC | SETS PROPERTYNAME NBO PROPERTYSETPARAMETERLIST NBC CBO FUNCTIONBODY CBC;
PROPERTYSETPARAMETERLIST -> FORMALPARAMETER;
GENERATORMETHOD -> MUL PROPERTYNAME NBO STRICTFORMALPARAMETERS NBC CBO GENERATORBODY CBC;
GENERATORDECLARATION -> FUNCTIONS MUL BINDINGIDENTIFIER NBO FORMALPARAMETERS NBC CBO GENERATORBODY CBC;
YIELDEXPRESSION -> YIELDS ASSIGNMENTEXPRESSION | YIELDS | YIELDS MUL ASSIGNMENTEXPRESSION;

LEXICALDECLARATION -> LETORCONST BINDINGLIST SEMICOLON;
LETORCONST -> LETS | CONSTS;
BINDINGLIST -> LEXICALBINDING | BINDINGLIST COMMA LEXICALBINDING;
LEXICALBINDING -> BINDINGIDENTIFIER | BINDINGIDENTIFIER INITIALIZER | BINDINGPATTERN INITIALIZER;
INITIALIZER -> EQUAL ASSIGNMENTEXPRESSION;

BINDINGPATTERN -> OBJECTBINDINGPATTERN | ARRAYBINDINGPATTERN;
OBJECTBINDINGPATTERN -> CBO BINDINGPROPERTYLIST CBC | CBO BINDINGPROPERTYLIST COMMA CBC | CBO BINDINGPROPERTYLIST COMMA CBC;
ELISION -> COMMA | ELISION COMMA;
ARRAYBINDINGPATTERN -> SBO SBC | SBO ELISION SBC | SBO BINDINGRESTELEMENT SBC | SBO ELISION BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST SBC | SBO BINDINGELEMENTLIST COMMA SBC | SBO BINDINGELEMENTLIST COMMA BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST COMMA ELISION BINDINGRESTELEMENT SBC | SBO BINDINGELEMENTLIST COMMA ELISION SBC;
BINDINGPROPERTYLIST -> BINDINGPROPERTY | BINDINGPROPERTYLIST COMMA BINDINGPROPERTY;

DECLARATION -> HOISTABLEDECLARATION | CLASSDECLARATION | LEXICALDECLARATION;
HOISTABLEDECLARATION -> FUNCTIONDECLARATION | GENERATORDECLARATION;

LABELEDSTATEMENT -> LABELIDENTIFIER COLON LABELLEDITEM;
LABELLEDITEM -> STATEMENT | FUNCTIONDECLARATION;

IFSTATEMENT -> IF PARENTHESIZEDEXPRESSION STATEMENT | IF PARENTHESIZEDEXPRESSION STATEMENT ELSE STATEMENT;

SWITCHSTATEMENT -> SWITCH PARENTHESIZEDEXPRESSION CBO CBC | SWITCH PARENTHESIZEDEXPRESSION CBO CASEGROUPS LASTCASEGROUP CBC | SWITCH PARENTHESIZEDEXPRESSION CBO LASTCASEGROUP CBC;
CASEGROUPS -> CASEGROUPS CASEGROUP ;
CASEGROUP -> CASEGUARD BLOCKSTATEMENTSPREFIX;
LASTCASEGROUP -> CASEGUARD BLOCKSTATEMENTS;
CASEGUARDS -> CASEGUARD | CASEGUARDS CASEGUARD;
CASEGUARD -> CASE EXPRESSION COLON | DEFAULT COLON;

DOSTATEMENT -> DO STATEMENT WHILE PARENTHESIZEDEXPRESSION;
WHILESTATEMENT -> WHILE PARENTHESIZEDEXPRESSION STATEMENT;

FORSTATEMENT -> FORS NBO FORINITIALIZER SEMICOLON OPTIONALEXPRESSION SEMICOLON OPTIONALEXPRESSION NBC STATEMENT | FORS NBO SEMICOLON OPTIONALEXPRESSION SEMICOLON OPTIONALEXPRESSION NBC STATEMENT | FORS NBO FORINBINDING INS EXPRESSION NBC STATEMENT | FORS NBO FORINITIALIZER SEMICOLON SEMICOLON OPTIONALEXPRESSION NBC STATEMENT | FORS NBO FORINITIALIZER SEMICOLON OPTIONALEXPRESSION SEMICOLON NBC STATEMENT | FORS NBO FORINITIALIZER SEMICOLON SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON OPTIONALEXPRESSION NBC STATEMENT | FORS NBO SEMICOLON OPTIONALEXPRESSION SEMICOLON NBC STATEMENT | FORS NBO SEMICOLON SEMICOLON NBC STATEMENT;
FORINITIALIZER -> EXPRESSION | VAR VARIABLEDECLARATIONLIST;
FORINBINDING -> VAR VARIABLEDECLARATION | LEFTSIDEEXPRESSION;

WITHSTATEMENT -> WITHS PARENTHESIZEDEXPRESSION STATEMENT;

CONTINUESTATEMENT -> CONTINUES SEMICOLON | CONTINUES LABELIDENTIFIER SEMICOLON;
LABELIDENTIFIER -> IDENTIFIER;

BREAKSTATEMENT -> BREAKS SEMICOLON | BREAKS LABELIDENTIFIER SEMICOLON;

% Return Statement
RETURNSTATEMENT -> RETURNS SEMICOLON | RETURNS EXPRESSION SEMICOLON;

THROWSTATEMENT -> THROWS EXPRESSION SEMICOLON;

TRYSTATEMENT -> TRYS BLOCK CATCH | TRYS BLOCK FINALLY | TRYS BLOCK CATCH FINALLY;
CATCH -> CATCHS NBO CATCHPARAMETER NBC BLOCK;
FINALLY -> FINALLYS BLOCK;
CATCHPARAMETER -> BINDINGIDENTIFIER | BINDINGPATTERN;

FUNCTIONDEFINITION -> NAMEDFUNCTION;
ANONYMOUSFUNCTION -> DEFS FORMALPARAMETERSANDBODY;
NAMEDFUNCTION -> DEFS VAR_VARIABLE FORMALPARAMETERSANDBODY;
FORMALPARAMETERSANDBODY -> NBO FORMALPARAMETERS NBC CBO TOPSTATEMENTS CBC | NBO NBC CBO TOPSTATEMENTS CBC NBO NBC CBO TOPSTATEMENTS CBC;
FORMALPARAMETERS -> FORMALPARAMETERSPREFIX;
FORMALPARAMETERSPREFIX -> FORMALPARAMETER | FORMALPARAMETERSPREFIX COMMA FORMALPARAMETER;
FORMALPARAMETER -> VAR_VARIABLE;

PROGRAM -> TOPSTATEMENTS;
TOPSTATEMENTS -> TOPSTATEMENTSPREFIX;
TOPSTATEMENTSPREFIX -> TOPSTATEMENT | TOPSTATEMENTSPREFIX TOPSTATEMENT | TOPSTATEMENTSPREFIX;
TOPSTATEMENT -> STATEMENT | FUNCTIONDEFINITION;

% Scripts and Modules
SCRIPT -> SCRIPTBODY | ;
SCRIPTBODY -> STATEMENTLIST;
MODULE -> MODULEBODY | ;
MODULEBODY -> MODULEITEMLIST;
MODULEITEMLIST -> MODULEITEM | MODULEITEMLIST MODULEITEM;
MODULEITEM -> IMPORTDECLARATION | EXPORTDECLARATION | STATEMENTLISTITEM;
IMPORTDECLARATION -> IMPORTS IMPORTCLAUSE FROMCLAUSE SEMICOLON | IMPORTS MODULESPECIFIER;
IMPORTCLAUSE -> IMPORTEDDEFAULTBINDING | NAMESPACEIMPORT | NAMEDIMPORTS | IMPORTEDDEFAULTBINDING COMMA NAMESPACEIMPORT | IMPORTEDDEFAULTBINDING COMMA NAMEDIMPORTS;
IMPORTEDDEFAULTBINDING -> IMPORTEDBINDING;
NAMESPACEIMPORT -> MUL ASS IMPORTEDBINDING;
NAMEDIMPORTS -> CBO  CBC | CBO IMPORTSLIST CBC | CBO IMPORTSLIST COMMA CBC;
FROMCLAUSE -> FROMS MODULESPECIFIER;
IMPORTSLIST -> IMPORTSPECIFIER | IMPORTSLIST COMMA IMPORTSPECIFIER;
IMPORTSPECIFIER -> IMPORTEDBINDING | IDENTIFIERNAME ASS IMPORTEDBINDING;
MODULESPECIFIER -> STRINGLITERAL;
IMPORTEDBINDING -> BINDINGIDENTIFIER;
EXPORTDECLARATION -> EXPORTS MUL FROMCLAUSE SEMICOLON | EXPORTS EXPORTCLAUSE FROMCLAUSE SEMICOLON | EXPORTS EXPORTCLAUSE SEMICOLON | EXPORTS VARIABLESTATEMENT | EXPORTS DECLARATION | EXPORTS DEFAULTS HOISTABLEDECLARATION | EXPORTS DEFAULTS CLASSDECLARATION | EXPORTS DEFAULTS ASSIGNMENTEXPRESSION;
EXPORTCLAUSE -> CBO CBC | CBO EXPORTSLIST CBC | CBO EXPORTSLIST COMMA CBC;
EXPORTSLIST -> EXPORTPECIFIER | EXPORTSLIST COMMA EXPORTPECIFIER;
EXPORTPECIFIER -> IDENTIFIERNAME | IDENTIFIERNAME ASS IDENTIFIERNAME;

% String Literal
STRINGLITERAL -> PETIK2 DOUBLESTRINGCHARACTERS PETIK2 | PETIK1 SINGLESTRINGCHARACTERS PETIK1 | PETIK2 PETIK2 | PETIK1 PETIK1;
DOUBLESTRINGCHARACTERS -> DOUBLESTRINGCHARACTER | DOUBLESTRINGCHARACTER DOUBLESTRINGCHARACTERS;
SINGLESTRINGCHARACTERS -> SINGLESTRINGCHARACTER | SINGLESTRINGCHARACTER SINGLESTRINGCHARACTERS;
DOUBLESTRINGCHARACTER -> ALPHABET | DIGIT | $ | & | . | ? | @ | ^ | ` | ~ | MUL | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | PETIK1 | | DIVIDE ESCAPESEQUENCE | LINECONTINUATION;
SINGLESTRINGCHARACTER -> ALPHABET | DIGIT | $ | & | . | ? | @ | ^ | ` | ~ | MUL | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | PETIK2 | | DIVIDE ESCAPESEQUENCE | LINECONTINUATION;
ESCAPESEQUENCE -> CHARACTERESCAPESEQUENCE | ZERO | HEXESCAPESEQUENCE | UNICODEESCAPESEQUENCE;
CHARACTERESCAPESEQUENCE -> SINGLEESCAPECHARACTER | NONESCAPECHARACTER;
SINGLEESCAPECHARACTER -> PETIK1 | PETIK2 | DIVBACK | b | f | n | r | t | v;
NONESCAPECHARACTER -> a | c | d | e | g | h | i | j | k | l | m | o | p | q | s | w | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | DIGIT | $ | & | . | ? | @ | ^ | ` | ~ | MUL | SERU | HASHTAG | PERSEN | NBO | NBC | PLUS | MIN | COMMA | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | DIVIDE ESCAPESEQUENCE | LINECONTINUATION ;  
ESCAPECHARACTER -> SINGLEESCAPECHARACTER | DECIMALDIGITS | x | u;
HEXESCAPESEQUENCE -> x HEXDIGIT HEXDIGIT;
UNICODEESCAPESEQUENCE -> u HEX4DIGITS | u CBO HEXDIGITS CBC; 
HEX4DIGITS -> HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT;


ZERO -> 0;
DOTS -> .;
XORS -> ^;
ANDS -> &;
ORS -> |;
NEWS -> new;
THISS -> this;
NULLS -> null;
INSTANCEOFS -> instanceof;
SERU -> !;
QUEST -> ?;
HASHTAG -> #;
DOLLAR -> $;
PERSEN -> %;
NBO -> (;
NBC -> );
WAVE -> ~;
MUL -> *;
POW -> * *;
PLUS -> +;
INCR -> + +;
MIN -> -;
DECR -> - -; 
COMMA -> ,;
DIVIDE -> /;
DIV -> / /;
DIVBACK -> \;
COLON -> :;
LESS -> <;
EQUAL -> =;
GREAT -> >;
SBO -> [;
SBC -> ];
UNDERSCORE -> _;
CBO -> {;
CBC -> };
PETIK1 -> ';
PETIK2 -> ";
NONES -> none;
DELETES -> delete;
SWITCHS -> switch;
CASES -> case;
VOIDS -> void;
TYPEOFS -> typeof;
ANDS -> and;
TRYS -> try
ORS -> or;
ISS -> is;
INS -> in;
NOTS -> not;
TRUES -> true;
FALSES -> false;
FORS -> for;
DOS -> do;
WHILES -> while;
IFS -> if;
ELIFS -> else if;
ELSES -> else;
BREAKS -> break;
CONTINUES -> continue;
FINALLYS -> finally;
CATCHS -> catch;
FUNCTIONS -> function;
RETURNS -> return;
CLASSS -> class;
FROMS -> from;
IMPORTS -> import;
ASS -> as;
SEMICOLON -> ;;
VAR -> var;
EXPORTS -> export;
EXTENDSS -> extends;
CONSTS -> const;
SUPERS -> super;
WITHS -> with;
YIELDS -> yield;
DEFAULTS -> default;
THROWS -> throw;
STATICS -> static;
TARGETS -> target;
